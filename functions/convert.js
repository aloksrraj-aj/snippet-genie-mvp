// NEW FIX: Using a dynamic import inside the handler to support ES Modules (ESM)
// We declare the handler as 'async' to use the 'await' keyword for dynamic import.

exports.handler = async (event, context) => {
    
    // --- Dynamic Import of curlconverter ---
    // This is the FIX for the ERR_REQUIRE_ESM error.
    let curlconverter;
    try {
        // dynamic import returns a Promise, so we need to await it.
        const module = await import('curlconverter');
        curlconverter = module.default || module;
    } catch (importError) {
        console.error("Failed to dynamically import curlconverter:", importError);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: "Server setup failed: Could not load converter module." })
        };
    }
    // ----------------------------------------

    if (event.httpMethod !== "POST") {
        return { statusCode: 405, body: "Method Not Allowed" };
    }

    try {
        const data = JSON.parse(event.body);
        const { curlInput, targetLang } = data;

        if (!curlInput || !targetLang) {
            return { statusCode: 400, body: JSON.stringify({ error: "Missing cURL input or target language." }) };
        }

        let generatedSnippet = "";

        // --- REAL CONVERSION LOGIC USING curlconverter ---
        if (targetLang === 'python') {
            // curlconverter is now ready to use
            generatedSnippet = curlconverter.toPython(curlInput);
            
            // Add a small header for clarity
            generatedSnippet = `# Generated by Snippet Genie\n# Target: Python Requests\n\n` + generatedSnippet;

        } else if (targetLang === 'nodejs') {
            // Updated message to engage users while we build the feature
            generatedSnippet = `// ✨ Node.js Support Coming Soon! ✨\n// This feature is currently under active development and will be released next week!\n// For now, please enjoy the fast and accurate Python conversion.`;
        } else if (targetLang === 'go') {
            // Updated message for Go
            generatedSnippet = `// Go Support Coming Soon!\n// We prioritize Node.js, but Go support will follow shortly after.\n// Please check back soon!`;
        } else {
             generatedSnippet = `Error: Unsupported language selected.`;
        }
        
        // Final Response to the client (app.js)
        return {
            statusCode: 200,
            body: JSON.stringify({ snippet: generatedSnippet })
        };

    } catch (error) {
        // If curlconverter fails to parse the cURL (Invalid syntax)
        console.error("Conversion/Parsing Error:", error);
        return {
            statusCode: 422,
            body: JSON.stringify({ 
                error: `Could not parse the cURL command. Check syntax. Details: ${error.message}`
            })
        };
    }
};