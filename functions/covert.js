// Import the actual curlconverter library
const { toPython } = require('curlconverter'); // We will focus on Python first

exports.handler = async (event, context) => {
    if (event.httpMethod !== "POST") {
        return { statusCode: 405, body: "Method Not Allowed" };
    }

    try {
        const data = JSON.parse(event.body);
        const { curlInput, targetLang } = data;

        if (!curlInput || !targetLang) {
            return { statusCode: 400, body: JSON.stringify({ error: "Missing cURL input or target language." }) };
        }

        let generatedSnippet = "";

        // --- REAL CONVERSION LOGIC USING curlconverter ---
        // For MVP, we only implement Python. Other languages can be added later.
        if (targetLang === 'python') {
            // curlconverter.toPython will parse the cURL and return Python code
            generatedSnippet = toPython(curlInput);
            
            // Add a small header for clarity
            generatedSnippet = `# Generated by Snippet Genie\n# Target: Python Requests\n\n` + generatedSnippet;

        } else if (targetLang === 'nodejs') {
            // Temporary message until we add full Node.js support
            generatedSnippet = `// Node.js support is coming soon! You sent: \n// cURL: ${curlInput.split('\n')[0]}...`;

        } else if (targetLang === 'go') {
            // Temporary message until we add full Go support
            generatedSnippet = `// Go support is coming soon! You sent: \n// cURL: ${curlInput.split('\n')[0]}...`;
        } 
        
        // Final Response to the client (app.js)
        return {
            statusCode: 200,
            body: JSON.stringify({ snippet: generatedSnippet })
        };

    } catch (error) {
        // If curlconverter fails to parse the cURL, it throws an error.
        console.error("Conversion/Parsing Error:", error);
        return {
            statusCode: 422,
            body: JSON.stringify({ 
                error: "Could not parse the cURL command. Please check your syntax.",
                details: error.message 
            })
        };
    }
};