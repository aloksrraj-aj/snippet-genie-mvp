// app.js (UPDATED FOR CLIENT-SIDE CONVERSION)

// 1. DYNAMIC IMPORT: We will import the library inside the conversion function
// because we don't want to load it until the user clicks the button.
let curlConverterModule = null;

document.addEventListener('DOMContentLoaded', () => {
    const convertButton = document.getElementById('convert-button');
    const inputCode = document.getElementById('input-code');
    const outputSnippet = document.getElementById('output-snippet');
    const outputLanguage = document.getElementById('output-language');
    const copyButton = document.getElementById('copy-button');
    const loadingIndicator = document.getElementById('loading-indicator');

    // --- Core Logic ---
    convertButton.addEventListener('click', async () => {
        const curlInput = inputCode.value.trim();
        const targetLang = outputLanguage.value;

        if (!curlInput) {
            alert("Please paste your cURL command or code here.");
            return;
        }

        outputSnippet.textContent = 'Converting...';
        loadingIndicator.style.display = 'block';

        try {
            // Check if the module is loaded, if not, dynamically load it!
            if (!curlConverterModule) {
                // This fetches the library directly to the browser (NO SERVERLESS USE!)
                const module = await import('https://cdn.jsdelivr.net/npm/curlconverter@12.1.0/dist/bundle.mjs');
                curlConverterModule = module.default || module;
                outputSnippet.textContent = 'Module loaded. Converting...';
            }

            let generatedSnippet = "";

            if (targetLang === 'python') {
                generatedSnippet = curlConverterModule.toPython(curlInput);
                generatedSnippet = `# Generated by Snippet Genie\n# Target: Python Requests (Client-Side)\n\n` + generatedSnippet;
            
            } else if (targetLang === 'nodejs') {
                 generatedSnippet = `// ✨ Node.js Support Coming Soon! ✨\n// This feature is currently under active development and will be released next week!\n// For now, please enjoy the fast and accurate Python conversion.`;
            
            } else if (targetLang === 'go') {
                 generatedSnippet = `// Go Support Coming Soon!\n// We prioritize Node.js, but Go support will follow shortly after.\n// Please check back soon!`;
            }
            
            outputSnippet.textContent = generatedSnippet;

        } catch (error) {
            console.error("Client-side Conversion Error:", error);
            outputSnippet.textContent = `Error: Could not parse the cURL command. Check syntax. Details: ${error.message}`;
            alert(`Error during conversion: ${error.message}`);
        } finally {
             loadingIndicator.style.display = 'none';
        }
    });

    // --- Copy Button Logic (Remains the same) ---
    copyButton.addEventListener('click', () => {
        const textToCopy = outputSnippet.textContent;
        navigator.clipboard.writeText(textToCopy).then(() => {
            copyButton.textContent = 'Copied!';
            setTimeout(() => {
                copyButton.textContent = 'Copy Code';
            }, 2000);
        }).catch(err => {
            console.error('Could not copy text: ', err);
            alert('Failed to copy text.');
        });
    });
});